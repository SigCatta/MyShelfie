@startuml
class VirtualView.Messages.ChatMTC {
- String CHAT_MESSAGE
- String SENDER
- String RECEIVER
- boolean isBroadcast
+ String getChatMessage()
+ String getSender()
+ String getRECEIVER()
+ boolean isBroadcast()
+ void update()
}
class VirtualView.Messages.PlayerMTC {
- String nickname
- boolean IS_CONNECTED
- int SCORE
- HashMap<Color,Point> PERSONAL_GOAL
- String PERSONAL_GOAL_CARD_NUMBER
+ String getNickname()
+ boolean isConnected()
+ int getScore()
+ HashMap<Color,Point> getPersonalGoal()
+ String getPERSONAL_GOAL_CARD_NUMBER()
+ void update()
}
class VirtualView.Messages.ChosenTilesTableMTC {
- List<ItemTile> CHOSEN_TILES
+ List<ItemTile> getChosenTiles()
+ void update()
}
class VirtualView.Messages.BoardMTC {
- ItemTile[][] BOARD
+ ItemTile[][] getColorBoard()
+ void update()
}
class VirtualView.VirtualView {
- List<SocketClientHandler> clientHandlers
- Game GAME
+ void addClient(SocketClientHandler)
+ SocketClientHandler getSocketHandlerClientByNickname(String)
+ void send(MessageToClient)
+ void updateAllPlayers()
+ void updateAllShelves()
}
interface VirtualView.ModelObservers.ModelObserver {
~ void update()
}
class VirtualView.ModelObservers.CommonGoalVV {
- Game game
- VirtualView VIRTUAL_VIEW
+ void update()
}
class VirtualView.ModelObservers.GameVV {
- Game GAME
- VirtualView VIRTUAL_VIEW
+ void update()
}
class VirtualView.Messages.ShelfMTC {
- ItemTile[][] SHELF
- String OWNER
+ String getOwner()
+ ItemTile[][] getShelf()
+ Color[][] getShelfForCLI()
+ void update()
}
class VirtualView.ModelObservers.BoardVV {
- Game GAME
- VirtualView VIRTUAL_VIEW
+ void update()
}
class VirtualView.Messages.CommonGoalMTC {
- ArrayList<String> cardNames
- ArrayList<Integer> availablePoints
+ ArrayList<String> getCardNames()
+ ArrayList<Integer> getAvailablePoints()
+ void update()
}
class VirtualView.Messages.PingMTC {
+ void update()
}
class VirtualView.ModelObservers.PlayerVV {
- Player PLAYER
- VirtualView VIRTUAL_VIEW
+ void update()
}
class VirtualView.Messages.EchoMTC {
- boolean errorFlag
- EchoID id
+ void update()
+ boolean isError()
+ String getOutput()
+ EchoID getID()
}
interface VirtualView.Messages.MessageToClient {
~ void update()
}
class VirtualView.ModelObservers.ShelfVV {
- VirtualView VIRTUAL_VIEW
- Player OWNER
+ void update()
}
class VirtualView.ModelObservers.ChosenTilesTableVV {
- Game GAME
- VirtualView VIRTUAL_VIEW
+ void update()
}
interface VirtualView.ModelObservers.ModelSubject {
~ void registerObserver(ModelObserver)
~ void removeObserver(ModelObserver)
~ void notifyObservers()
}
class VirtualView.Messages.GameMTC {
- int GAMEID
- int MAX_PLAYER_NUMBER
- String activePlayerNickname
- GameState GAME_STATE
- int numOfPlayers
+ int getGameID()
+ int getMAX_PLAYER_NUMBER()
+ GameState getGameState()
+ String getActivePlayerNickname()
+ int getNumOfPlayers()
+ void update()
}


VirtualView.Messages.MessageToClient <|.. VirtualView.Messages.ChatMTC
VirtualView.Messages.MessageToClient <|.. VirtualView.Messages.PlayerMTC
VirtualView.Messages.MessageToClient <|.. VirtualView.Messages.ChosenTilesTableMTC
VirtualView.Messages.MessageToClient <|.. VirtualView.Messages.BoardMTC
VirtualView.ModelObservers.ModelObserver <|.. VirtualView.ModelObservers.CommonGoalVV
VirtualView.ModelObservers.ModelObserver <|.. VirtualView.ModelObservers.GameVV
VirtualView.Messages.MessageToClient <|.. VirtualView.Messages.ShelfMTC
VirtualView.ModelObservers.ModelObserver <|.. VirtualView.ModelObservers.BoardVV
VirtualView.Messages.MessageToClient <|.. VirtualView.Messages.CommonGoalMTC
VirtualView.Messages.MessageToClient <|.. VirtualView.Messages.PingMTC
VirtualView.ModelObservers.ModelObserver <|.. VirtualView.ModelObservers.PlayerVV
VirtualView.Messages.MessageToClient <|.. VirtualView.Messages.EchoMTC
VirtualView.ModelObservers.ModelObserver <|.. VirtualView.ModelObservers.ShelfVV
VirtualView.ModelObservers.ModelObserver <|.. VirtualView.ModelObservers.ChosenTilesTableVV
VirtualView.Messages.MessageToClient <|.. VirtualView.Messages.GameMTC
@enduml